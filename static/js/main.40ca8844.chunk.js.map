{"version":3,"sources":["components/StatsField.js","context/PlayerContext.js","components/Calculator.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["StatsField","form","field","props","errorText","getIn","touched","name","errors","TextField","margin","required","helperText","error","PlayerContext","createContext","ptMULT","astMULT","rebMULT","stlMULT","blkMULT","threesMULT","toMULT","pfMULT","schema","yup","player","trim","pt","ast","reb","threes","stl","blk","to","pf","Calculator","useContext","players","setPlayers","validationSchema","initialValues","id","onSubmit","values","setSubmitting","resetForm","finalScore","toFixed","score","uuidv4","handleChange","handleSubmit","isSubmitting","style","label","type","onChange","value","component","inputProps","step","Button","disabled","display","flexFlow","useStyles","makeStyles","theme","root","width","paper","marginTop","spacing","overflowX","marginBottom","table","minWidth","List","classes","lineupScore","useCallback","map","Number","reduce","sum","i","totalScore","className","Paper","Table","aria-label","TableHead","TableRow","TableCell","padding","align","TableBody","key","scope","IconButton","onClick","removedPlayer","newLineup","filter","rowSpan","App","useState","useEffect","console","log","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40ca8844.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { getIn } from \"formik\";\r\n\r\nexport default function StatsField({ form, field, ...props }) {\r\n  const errorText =\r\n    getIn(form.touched, field.name) && getIn(form.errors, field.name);\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      required={true}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const PlayerContext = createContext();\r\n","import React, { useContext } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nimport StatsField from \"./StatsField\";\r\nimport { PlayerContext } from \"../context/PlayerContext\";\r\n\r\nvar ptMULT = 0.71;\r\nvar astMULT = 3.28;\r\nvar rebMULT = 1.8;\r\nvar stlMULT = 11.05;\r\nvar blkMULT = 16.26;\r\nvar threesMULT = 7.5;\r\nvar toMULT = 6;\r\nvar pfMULT = 4.42;\r\n\r\nvar schema = yup.object({\r\n  player: yup\r\n    .string()\r\n    .required()\r\n    .trim(),\r\n  pt: yup.number(),\r\n  ast: yup.number(),\r\n  reb: yup.number(),\r\n  threes: yup.number(),\r\n  stl: yup.number(),\r\n  blk: yup.number(),\r\n  to: yup.number(),\r\n  pf: yup.number()\r\n});\r\n\r\nfunction score(values) {\r\n  const playerValue =\r\n    values.pt * ptMULT * 1.05 +\r\n    values.ast * astMULT * 1.2 +\r\n    values.reb * rebMULT * 1.13 -\r\n    values.to * toMULT * 1.13 +\r\n    values.stl * stlMULT +\r\n    values.blk * blkMULT +\r\n    values.threes * threesMULT -\r\n    values.pf * pfMULT;\r\n  return playerValue.toFixed(2);\r\n}\r\n\r\nexport default function Calculator() {\r\n  const { players, setPlayers } = useContext(PlayerContext);\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      initialValues={{\r\n        id: \"\",\r\n        player: \"\",\r\n        pt: \"\",\r\n        ast: \"\",\r\n        reb: \"\",\r\n        threes: \"\",\r\n        stl: \"\",\r\n        blk: \"\",\r\n        to: \"\",\r\n        pf: \"\"\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        const finalScore = score(values);\r\n        const id = uuidv4();\r\n        setPlayers([...players, { ...values, finalScore, id }]);\r\n        setSubmitting(true);\r\n        resetForm();\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleSubmit, isSubmitting }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <div style={style}>\r\n            <Field\r\n              label=\"Player\"\r\n              name=\"player\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              value={values.player}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"PT\"\r\n              name=\"pt\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.pt}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"AST\"\r\n              name=\"ast\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.ast}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"REB\"\r\n              name=\"reb\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.reb}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"Threes\"\r\n              name=\"threes\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.threes}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"STL\"\r\n              name=\"stl\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.stl}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"BLK\"\r\n              name=\"blk\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.blk}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"TO\"\r\n              name=\"to\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.to}\r\n              component={StatsField}\r\n            />\r\n            <Field\r\n              inputProps={{ step: \"0.1\" }}\r\n              label=\"PF\"\r\n              name=\"pf\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              value={values.pf}\r\n              component={StatsField}\r\n            />\r\n          </div>\r\n          <br />\r\n          <br />\r\n\r\n          <Button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst style = {\r\n  display: \"flex\",\r\n  flexFlow: \"row nowrap\"\r\n};\r\n","import React, { useContext, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport { PlayerContext } from \"../context/PlayerContext\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nfunction totalScore(players) {\r\n  return players\r\n    .map(({ finalScore }) => Number(finalScore))\r\n    .reduce((sum, i) => {\r\n      return sum + i;\r\n    }, 0)\r\n    .toFixed(2);\r\n}\r\n\r\nexport default function List() {\r\n  const { players, setPlayers } = useContext(PlayerContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const lineupScore = useCallback(totalScore(players));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} aria-label=\"spanning table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\"></TableCell>\r\n              <TableCell>Player</TableCell>\r\n              <TableCell align=\"right\">PT</TableCell>\r\n              <TableCell align=\"right\">AST</TableCell>\r\n              <TableCell align=\"right\">REB</TableCell>\r\n              <TableCell align=\"right\">TO</TableCell>\r\n              <TableCell align=\"right\">3s</TableCell>\r\n              <TableCell align=\"right\">STL</TableCell>\r\n              <TableCell align=\"right\">BLK</TableCell>\r\n              <TableCell align=\"right\">PF</TableCell>\r\n              <TableCell align=\"right\">SCORE</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {players.map(player => (\r\n              <TableRow key={player.id}>\r\n                <TableCell padding=\"checkbox\" component=\"th\" scope=\"row\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      const removedPlayer = player.id;\r\n                      const newLineup = players.filter(\r\n                        player => player.id !== removedPlayer\r\n                      );\r\n                      setPlayers(newLineup);\r\n                    }}\r\n                  >\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell>{player.player}</TableCell>\r\n                <TableCell align=\"right\">{player.pt}</TableCell>\r\n                <TableCell align=\"right\">{player.ast}</TableCell>\r\n                <TableCell align=\"right\">{player.reb}</TableCell>\r\n                <TableCell align=\"right\">{player.to}</TableCell>\r\n                <TableCell align=\"right\">{player.threes}</TableCell>\r\n                <TableCell align=\"right\">{player.stl}</TableCell>\r\n                <TableCell align=\"right\">{player.blk}</TableCell>\r\n                <TableCell align=\"right\">{player.pf}</TableCell>\r\n                <TableCell align=\"right\">{player.finalScore}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell rowSpan={1}>Total</TableCell>\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell />\r\n              <TableCell align=\"right\">{lineupScore}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Calculator from \"./components/Calculator\";\nimport List from \"./components/List\";\nimport { PlayerContext } from \"./context/PlayerContext\";\nimport \"./App.css\";\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => console.log(players), [players, setPlayers]);\n  return (\n    <PlayerContext.Provider value={{ players, setPlayers }}>\n      <div className=\"provider\">\n        <Calculator className=\"calculator\" />\n        <div className=\"list\">\n          <List />\n        </div>\n      </div>\n    </PlayerContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}